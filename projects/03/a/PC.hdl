// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    /* reset takes precedence over load, which takes
       precedence over inc */

    /* Working implementation!! */
  
    And16(a=false, b=in, out=Reset);
    Inc16(in=secondOut, out=Inc);
    Or(a=inc, b=reset, out=Or1);
    Or(a=Or1, b=load, out=FinalOr);
    Mux(a=load, b=reset, sel=reset, out=pick);
    Mux16(a=in, b=Reset, sel=reset, out=LoadOrRes);
    Mux16(a=Inc, b=LoadOrRes, sel=pick, out=incRes);
    Register(in=incRes, load=FinalOr, out=secondOut, out=out);
}
